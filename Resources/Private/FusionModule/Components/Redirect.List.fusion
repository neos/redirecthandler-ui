prototype(Neos.RedirectHandler.Ui:Component.Redirect.List) < prototype(Neos.Fusion:Component) {
    redirectsJson = '[]'
    showHitCount = ${Configuration.setting('Neos.RedirectHandler.features.hitCounter')}
    csrfToken = null
    defaultStatusCode = ${Configuration.setting('Neos.RedirectHandler.Ui.defaultStatusCode')}
    initialStatusCodeFilter = ${Configuration.setting('Neos.RedirectHandler.Ui.initialStatusCodeFilter')}
    initialTypeFilter = ${Configuration.setting('Neos.RedirectHandler.Ui.initialTypeFilter')}
    validSourceUriPathPattern = ${Configuration.setting('Neos.RedirectHandler.Ui.validation.sourceUriPath')}
    // Don't render disabled status codes
    statusCodes = ${Array.filter(Configuration.setting('Neos.RedirectHandler.Ui.statusCodes'), x => !!x)}
    hostOptions = ${hostOptions}

    actions = Neos.Fusion:DataStructure {
        delete = Neos.Fusion:UriBuilder {
            action = 'delete'
            format = 'json'
        }
        update = Neos.Fusion:UriBuilder {
            action = 'update'
            format = 'json'
        }
        create = Neos.Fusion:UriBuilder {
            action = 'create'
            format = 'json'
        }
    }

    renderer = afx`
        <div id="redirects-list-app"
             data-show-hit-count={props.showHitCount ? 'true' : 'false'}
             data-initial-status-code-filter={props.initialStatusCodeFilter}
             data-initial-type-filter={props.initialTypeFilter}
             data-csrf-token={props.csrfToken}
             data-default-status-code={props.defaultStatusCode}
             data-actions={Json.stringify(props.actions)}
             data-valid-source-uri-path-pattern={props.validSourceUriPathPattern}
             data-status-codes={Json.stringify(props.statusCodes)}
             data-host-options={Json.stringify(props.hostOptions)}>
            <p>{I18n.translate('Neos.RedirectHandler.Ui:Modules:list.loading')}</p>

            <script type="application/json" id="redirects-list-data">
                {props.redirectsJson}
            </script>
        </div>
    `
}
